{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-20T10:50:28.109458+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-20T10:54:09.649737+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "pcg7apn7DQCt9y38DBKQeg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "In my blog post about an ERP migration project,  I used a nested polymetric view to show  relationships between Cobol files and their imports. That is a very simple visualization to make, and might be useful for others wanting to start using GToolkit. So let's recreate that visualization on a different project."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-20T10:56:06.627343+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T14:52:35.581288+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "NCZpfpn7DQC2re/NDBKQeg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "I downloaded the Jitsi project. There are lots of different files in there. The javascript ones can be recognized by their extension."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-20T10:54:16.185077+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T14:51:55.315458+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "Me/Td5n7DQC1SFWcDBKQeg=="
				},
				"code" : "projectDirectory := FileLocator home / 'Sensus/jitsi/jitsi-meet'.\rjavaScriptFiles := projectDirectory allChildrenMatching: '*.js'."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T14:51:59.653501+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T14:53:07.652177+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "e/CtBcX7DQCXrt4YDBKQeg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "The same can be done for all extensions at the same time"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T14:44:48.864974+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T14:50:17.594988+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "NaEA7MT7DQCTc8GeDBKQeg=="
				},
				"code" : "filesByTypes := Dictionary new.\rprojectDirectory allFiles do: [:each|\r\tfilesByTypes at: each extension \r\t\tifPresent: [:value | value add: each] \r\t\tifAbsentPut: [OrderedCollection with: each]].\rfilesByTypes"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-20T10:58:26.674583+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T14:53:46.456236+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "xxbChpn7DQC45oMHDBKQeg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Let's start with simply visualizing the javascript files in a grid. We noticed that there are empty files, so let's make them stand out."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-20T10:59:17.212724+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-21T13:09:08.953636+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "X0DFiZn7DQC6dng1DBKQeg=="
				},
				"code" : "view := GtMondrian new.\rview nodes\r\tstencil: [ :file |\r\t\tBlElement new\r\t\t\tsize: 10@10;\r\t\t\tborder: (\r\t\t\t\t(file contents size =0) \r\t\t\t\t\tifTrue: [Color red]\r\t\t\t\t\tifFalse: [Color green])];\r\twith: javaScriptFiles.\rview layout grid.\rview\r\t"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-20T11:02:54.314159+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-20T11:06:03.081632+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "5vS1lpn7DQC9VAFfDBKQeg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "These javascript files contain import statements that look like"
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-20T11:06:44.200433+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-20T11:08:02.651147+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "zLtppJn7DQC+mfJ3DBKQeg=="
				},
				"code" : "sampleBlockOfImportStatements := 'import React from ''react'';\nimport ReactDOM from ''react-dom'';\n\nimport { browser } from ''../../../react/features/base/lib-jitsi-meet'';'.\r"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-20T11:08:17.578133+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-20T11:08:31.457828+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "ppL6qZn7DQC/hGFJDBKQeg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Let's parse a line like that."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-20T11:08:50.352153+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-20T12:35:47.826013+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "gqruq5n7DQCAGmKcDBKQeg=="
				},
				"code" : "importLineParser := 'import' asPParser, #any asPParser starLazy flatten, 'from' asPParser, #any asPParser starLazy flatten, $; asPParser ==> [:items | Array with: items second with: items fourth].\rimportLineParser parse: 'import ''hkkkl from bla;'.\rimportParser := importLineParser sea star ==> [:items | items collect: [:line | line second]].\rimportParser parse: sampleBlockOfImportStatements"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-20T12:41:15.643605+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-20T12:41:30.777353+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "/xh19pr7DQCKDkmDDBKQeg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Other approach, try parsing the javascript files."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-20T12:41:37.624732+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-21T13:03:35.538021+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "24DE95r7DQCLEttzDBKQeg=="
				},
				"code" : "parsedFiles := javaScriptFiles collect: [:fileName | fileName -> (JSParser parseWithErrors: fileName contents) ]"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T15:44:12.310665+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T15:44:43.38884+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "J35mwMX7DQCsAFPBDBKQeg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "But the importParser is good enough for this, let's apply that."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T15:16:03.591389+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T15:16:46.742564+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "76u+W8X7DQCcwz5bDBKQeg=="
				},
				"code" : "pp2ParsedFiles := javaScriptFiles collect: [:fileName | fileName -> (importParser parse: fileName contents) ]"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T15:44:54.850185+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T15:45:51.235103+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "r5jvwsX7DQCthU16DBKQeg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Now we can show for each javascript file a tiny rectangle for each import. If there are none, make sure to show a rectangle anyway."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T15:22:31.817738+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T15:37:30.302445+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "QozicsX7DQCeSdOFDBKQeg=="
				},
				"code" : "view := GtMondrian new.\rview nodes\r\tstencil: [ :association |\r\t\tBlElement new\r\t\t\tpadding: (BlInsets all: 3);\r\t\t\tborder: (\r\t\t\t\t(association key contents size =0) \r\t\t\t\t\tifTrue: [Color red]\r\t\t\t\t\tifFalse: [Color green])];\r\twith: (pp2ParsedFiles sorted: [:a :b | a value size > b value size])\r\tforEach: [:association | view nodes \r\t\t\t\t\tshape: [ :me | BlElement new \r\t\t\t\t\t\tbackground: Color green;\r\t\t\t\t\t\tsize: 5@5;\r\t\t\t\t\t\tyourself  ];\r\t\t\t\t\twith: (association value).\r\t\t\t\t\tview layout grid.\r\t\t\t\t\tassociation value size = 0 ifTrue: [\r\t\t\t\t\t\tview nodes shape: [:me | BlElement new \r\t\t\t\t\t\tbackground: Color red;\r\t\t\t\t\t\tmargin: (BlInsets all: 3);\r\t\t\t\t\t\tsize: 5@5;\r\t\t\t\t\t\tyourself  ];\r\t\t\t\t\t\twith: #('zero').\r\t\t\t\t\t]].\rview layout grid.\rview\r\t"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T15:42:28.367171+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T15:44:01.509963+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "iXE0usX7DQCmEIHpDBKQeg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Easiest way to do name lookup would be to just put the files in a Dictionary on basename. Without the .js extension, and the path. That would be good enough if there are no or only a few name collisions. If I put the names in a set, I can easily see if that is the case."
			},
			{
				"__type" : "pharoSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T15:38:47.711925+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T15:41:07.744046+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "9oINrcX7DQCkp6D/DBKQeg=="
				},
				"code" : "(javaScriptFiles collect: [:each | each basenameWithoutExtension]) asSet"
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T15:46:09.26746+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2025-09-22T15:47:51.072588+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "IB1fx8X7DQCwQSSHDBKQeg=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "That's a pity, that set is not even half as large as the full list. We'll need to spend some more time to build a lookup function."
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-09-20T10:50:28.089491+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2025-09-20T10:50:28.089491+02:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Posting a text with a visualization"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "4f7a3b6a-99fb-0d00-adf6-bcc50c12907a"
	}
}